# 开发环境
# 机房标识(用于token认证，路由到正确的机房ip)
room.id=bj

server.id=1
server.port=8085


###########数据库读写分离配置################# 
spring.datasource.url={jdbcUrl}
spring.datasource.username={user}
spring.datasource.password={password}
spring.datasource.driverClassName={driverClass}
  
#####ce.read.driverClassName=com.mysql.jdbc.Driver

# 设定应用的context-path
#server.context-path=/projectFile


# login session key
login.session.key=login_user
# login token name
login.token.name=login-token

# SSO 登录
sso.url=
sso.module=



# 静态资源
# spring boot 静态访问路由
#spring.mvc.static-path-pattern=/public/**
# spring boot 静态资源地址
spring.resources.static-locations=classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources,file:${out.static.path},file:${out.logs.path}

# 外部静态资源  如上传、前端文件等等  E:/Workspaces/ecworkspace/20171207/docs/docs_api/static/
out.static.path=

# 上传    上传的文件会放在 ${out_static_path}upload/
#  maxFileSize 单个数据大小 
#  maxRequestSize 总数据大小，主要用在多文件上传时
#spring.servlet.multipart.maxFileSize=100MB
#spring.servlet.multipart.maxRequestSize=1000MB
# post限制
#server.tomcat.maxHttpPostSize=-1

# 访问日志文件 logback.xml  E:/Workspaces/ecworkspace/20171207/docs/docs_api/logs/
out.logs.path=


# 日志地址
#  logging.file和logging.path二者不能同时使用，如若同时使用，则只有logging.file生效
#  logging.file，设置文件，可以是绝对路径，也可以是相对路径。
#  logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容。
#logging.path=logs/demo
#logging.file=demo.log
# 自定义日志配置
#  由于标准的logback.xml配置文件加载的太早，所以你不能在里面使用扩展部分。你需要使用logback-spring.xml或者通过logging.config自定义
#logging.config=classpath:logback-config.xml
# 日志级别
logging.level.root=info
#logging.level.com.digisky=debug


# mybatis 日志
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

