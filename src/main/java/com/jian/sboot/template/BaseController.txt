package PK;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import Service;
import LoginConfig;
import Utils;
import com.jian.tools.core.JsonTools;
import com.jian.tools.core.ResultKey;
import com.jian.tools.core.ResultTools;
import com.jian.tools.core.Tips;
import com.jian.tools.core.Tools;

public abstract class BaseController<T> {
	
	protected BaseService<T> service;
	
	public abstract void initService();

	//登录验证
	public static Map<String, Object> verifyLogin(HttpServletRequest req){
		
		return LoginConfig.verifyLogin(req);
	}
	
	//sign验证
	public static Map<String, Object> verifySign(HttpServletRequest req){
		
		return null;
	}
	
	//获取用户信息
	public static String getUserInfo(HttpServletRequest req){
		return LoginConfig.getUserInfo(req);
	}
	
	
	
    public String add(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//保存
		try {
			T obj = Tools.getReqParamsToObject(req, getObejctClass().newInstance());
			int res = service.add(obj);
			if(res > 0){
				return ResultTools.custom(Tips.ERROR1).put(ResultKey.DATA, res).toJSONString();
			}else{
				return ResultTools.custom(Tips.ERROR0).toJSONString();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return ResultTools.custom(Tips.ERROR0).toJSONString();
    }
	
	
    public String add2(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//保存
		try {
			T obj = Tools.getReqParamsToObject(req, getObejctClass().newInstance());
			T res = service.add2(obj);
			if(res != null){
				return ResultTools.custom(Tips.ERROR1).put(ResultKey.DATA, res).toJSONString();
			}else{
				return ResultTools.custom(Tips.ERROR0).toJSONString();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return ResultTools.custom(Tips.ERROR0).toJSONString();
    }
	
	
    public String update(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		List<String> pkeys = Utils.getPrimaryKeys(getObejctClass());//获取主键
		if(pkeys == null || pkeys.isEmpty()){
			return ResultTools.custom(Tips.ERROR206).toJSONString();
		}
		Map<String, Object> condition = new HashMap<String, Object>();
		for (String str : pkeys) {
			String strv = Tools.getReqParamSafe(req, str);
			vMap = Tools.verifyParam(str, strv, 0, 0);
			if(vMap != null){
				return ResultTools.custom(Tips.ERROR206, str).toJSONString();
			}
			condition.put(str, strv);
		}
		Map<String, Object> setValues = Tools.getReqParamsToMap(req, getObejctClass());
		//保存
		int res = service.modify(setValues, condition);
		if(res > 0){
			return ResultTools.custom(Tips.ERROR1).toJSONString();
		}else{
			return ResultTools.custom(Tips.ERROR0).put(ResultKey.DATA, res).toJSONString();
		}
    }
	
	
	
    public String delete(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		List<String> pkeys = Utils.getPrimaryKeys(getObejctClass());//获取主键
		if(pkeys == null || pkeys.isEmpty()){
			return ResultTools.custom(Tips.ERROR206).toJSONString();
		}
		Map<String, Object> condition = new HashMap<String, Object>();
		for (String str : pkeys) {
			String strv = Tools.getReqParamSafe(req, str);
			vMap = Tools.verifyParam(str, strv, 0, 0);
			if(vMap != null){
				return ResultTools.custom(Tips.ERROR206, str).toJSONString();
			}
			condition.put(str, strv);
		}
		//保存
		int res = service.delete(condition);
		if(res > 0){
			return ResultTools.custom(Tips.ERROR1).toJSONString();
		}else{
			return ResultTools.custom(Tips.ERROR0).put(ResultKey.DATA, res).toJSONString();
		}
    }
	
	
    public String deleteBy(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		Map<String, Object> condition = Tools.getReqParamsToMap(req, getObejctClass());
		if(condition == null || condition.isEmpty()){
			return ResultTools.custom(Tips.ERROR211, "删除条件").toJSONString();
		}
		//保存
		int res = service.delete(condition);
		if(res > 0){
			return ResultTools.custom(Tips.ERROR1).toJSONString();
		}else{
			return ResultTools.custom(Tips.ERROR0).put(ResultKey.DATA, res).toJSONString();
		}
    }
	
	
    public String findAll(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		/*vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}*/
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		List<T> list = service.findAll();
        return ResultTools.custom(Tips.ERROR1).put(ResultKey.DATA, list).toJSONString();
    }
	
	
    public String findPage(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		/*vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}*/
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		String page = Tools.getReqParamSafe(req, "page");
		String rows = Tools.getReqParamSafe(req, "rows");
		vMap = Tools.verifyParam("page", page, 0, 0, true);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		vMap = Tools.verifyParam("rows", rows, 0, 0, true);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		int start = Tools.parseInt(page) <= 1 ? 0 : (Tools.parseInt(page) - 1) * Tools.parseInt(rows);
		//参数
		Map<String, Object> condition = Tools.getReqParamsToMap(req, getObejctClass());
		
		List<T> list = service.findPage(condition, start, Tools.parseInt(rows));
		long total = service.size(condition);
        return ResultTools.custom(Tips.ERROR1).put(ResultKey.TOTAL, total).put(ResultKey.DATA, list).toJSONString();
    }
	
	
    public String findOne(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//登录
		/*vMap = verifyLogin(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}*/
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		Map<String, Object> condition = Tools.getReqParamsToMap(req, getObejctClass());
		if(condition == null || condition.isEmpty()){
			return ResultTools.custom(Tips.ERROR211, "查询条件").toJSONString();
		}
		T res = service.findOne(condition);
        return ResultTools.custom(Tips.ERROR1).put(ResultKey.DATA, res).toJSONString();
    }
	
	
    public String findList(HttpServletRequest req) {
		initService();
		
		Map<String, Object> vMap = null;
		//sign
		vMap = verifySign(req);
		if(vMap != null){
			return JsonTools.toJsonString(vMap);
		}
		
		//参数
		Map<String, Object> condition = Tools.getReqParamsToMap(req, getObejctClass());
		if(condition == null || condition.isEmpty()){
			return ResultTools.custom(Tips.ERROR211, "查询条件").toJSONString();
		}
		List<T> list = service.findList(condition);
        return ResultTools.custom(Tips.ERROR1).put(ResultKey.DATA, list).toJSONString();
    }
	
	private Class<T> getObejctClass(){
		return Utils.getObejctClass(getClass());
	}
	
}
