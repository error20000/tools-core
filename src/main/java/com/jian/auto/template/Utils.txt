package PK;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.jian.annotation.Excel;
import com.jian.annotation.PrimaryKey;
import com.jian.annotation.PrimaryKeyCondition;
import com.jian.tools.core.DateTools;
import com.jian.tools.core.Tools;

public class Utils {

	private static Map<String, List<PrimaryKeyCondition>> pkArrays = new HashMap<String ,List<PrimaryKeyCondition>>();
	
	/**
	 * 获取Entity类注解的PrimaryKey。
	 * @param clss
	 * @return
	 */
	public static  List<PrimaryKeyCondition> getPrimaryKeys(Class<?> clss){
		String mark = clss.getCanonicalName();
		List<PrimaryKeyCondition> list = null;
		if(pkArrays.containsKey(mark)){
			list = pkArrays.get(mark);
		}else {
			list = new ArrayList<PrimaryKeyCondition>();
			Field[] fields = Tools.getFields(clss);
			for (Field f : fields) {
				if(f.isAnnotationPresent(PrimaryKey.class)){
					PrimaryKeyCondition node = new PrimaryKeyCondition();
					node.setField(f.getName());
					node.setType(f.getType().getSimpleName());
					node.setKeyType(f.getAnnotation(PrimaryKey.class).type());
					list.add(node);
				}
			}
			pkArrays.put(mark, list);
		}
		return list;
	}
	
	/**
	 * 填充日期
	 * @param fillCondition  格式 “,xxxx,xxxx,xxxx,”
	 * @param obj 对象
	 * @return obj
	 */
	public static <T> T fillDate(String fillCondition, T obj){
		Field[] fields = Tools.getFields(obj.getClass());
		Method[] methods = Tools.getMethods(obj.getClass());
		for (Field f : fields) {
			if(f.isAnnotationPresent(Excel.class)){
				String name = f.getAnnotation(Excel.class).name();
				String value = null;
				if(fillCondition.indexOf(","+name+",") != -1 ){ //直接匹配  如：日期
					value = DateTools.formatDate();
				//匹配附带格式,以空格分隔  如：日期   yyyy-MM-dd
				}else if( name.indexOf(" ") != -1 && fillCondition.indexOf(","+name.substring(0, name.indexOf(" ")+1)+",") != -1){
					value =DateTools.formatDate(name.substring(name.indexOf(" ")+1).trim());
				}
				if(value != null){
					for (Method m : methods) {
						if(m.getName().startsWith("set") && m.getName().substring(3).equalsIgnoreCase(f.getName())){
							try {
								m.invoke(obj, value);
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
					}
				}
			}
			
		}
		return obj;
	}
	
	/**
	 * 填充日期
	 * @param fillCondition  格式 “,xxxx,xxxx,xxxx,”
	 * @param obj 对象
	 * @return obj
	 */
	public static Map<String, Object> fillDate(String fillCondition, Class<?> clss){
		Field[] fields = Tools.getFields(clss);
		Map<String, Object> map = new HashMap<String, Object>();
		for (Field f : fields) {
			if(f.isAnnotationPresent(Excel.class)){
				String name = f.getAnnotation(Excel.class).name();
				String value = null;
				if(fillCondition.indexOf(","+name+",") != -1 ){ //直接匹配  如：日期
					value = DateTools.formatDate();
				//匹配附带格式,以空格分隔  如：日期   yyyy-MM-dd
				}else if( name.indexOf(" ") != -1 && fillCondition.indexOf(","+name.substring(0, name.indexOf(" ")+1)+",") != -1){
					value =DateTools.formatDate(name.substring(name.indexOf(" ")+1).trim());
				}
				if(value != null){
					map.put(f.getName(), value);
				}
			}
			
		}
		return map;
	}

}
